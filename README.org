# -*- mode: org; coding: utf-8; -*-

#+TITLE: README for Zeta
* Motivation
Declarative package management sucks.  There's a reason imperative
package managers like =apt= have become the norm: The workflow is
clumsy. Consider that you need to do the following if you just want to
install a single package, say =cowsay=:

- Open your editor
- Locate the specific file where you declare packages like =cowsay= (or create it, if it doesn't exist yet)
- Put in the package
- Exit your editor
- Open your terminal
- Rebuild
  
After almost 2 years of daily-driving NixOS, I have realized that this
is tiring, to say the least. The solution? A wrapper whose UX makes it
/feel/ imperative, providing simple =apt= - esque commands like
=install= and =remove=, but actually acts declarative under the
hood. That way, you get the best of both worlds: Simple, short
commands to install and remove packages *AND* the abiliity to subject
your package manifest(s) to VC via git and have an overview of what's
installed at all times.

* Technical aspects
=zeta= aims to be simple, lightweight, and programmed in a functional style or
procedural style when convenient.  It uses =guix='s =manifest= feature
(specifically, =specifications->manifest= and =concatenate-manifests=) to build a
"root" manifest (=root.scm= by default) from a directory tree (located
at =$ZETA_ROOT=, =$HOME/.zeta= by default) and install it via =guix
install -m=. This has the advantage that you can manually use both the
individual manifests as well as the root manifest as inputs for =guix
shell -m= or =guix install -m=.

* Subcommands:
- =zeta init=

  Creates the directory =$ZETA_ROOT= and =root.scm= in it, which is
  initially just a "skeleton" to later load manifests into.
  Does not usually need to be invoked manually, unless one wants to
  completely re-initialize the directory tree. 

- =zeta intall [-m | --manifest MANIFEST] PKG ...=

  Installs the specified packages at the specified manifest, if
  specified, or prompts to select one from =$ZETA_ROOT=

- =zeta remove [-m | --manifest MANIFEST] PKG ...=

  Same as =zeta install=, but for removing packages.

- =zeta add MANIFEST ...=

  Creates a new manifest under MANIFEST ... (which is interpreted as
  a suffix-less path relative to =$ZETA_ROOT=) and adds it to
  =root.scm=. For example: =zeta add foo/bar= would create and add the
  manifest =~/.zeta/foo/bar.scm= to =root.scm=, assuming that
  =$ZETA_ROOT= is left at its default value (and not otherwise
  modified programatically, via =%zeta-root=)
  
- =zeta del MANIFEST ...=

  Same as =zeta add=, except for deleting manifest.

- =zeta list=

  Lists all installed packages and their respective manifests.

- =zeta apply=

  Applies the root manifest. Equivalent to =guix package -m $ZETA_ROOT/root.scm=.
    
- =zeta rescan=   

  Rescans root manifest from the directory tree. Use this if you have manually
  operated on manifests, causing =root.scm= to get out of sync.

- =zeta purge=

  Deletes all files in the directory tree not specified in the root
  manifest.  Complementary to =zeta rescan=. Use this if you want to
  quickly dispose of manually / accidentally created files under
  =$ZETA_ROOT= which are not included in the root
  manifest (e.g. Emacs backup files, notes).
  
* Wishlist / TODO
- [X] Basic package/manifest management
- [ ] Dry-runs before modifying manifests, =zeta=-level atomicity 
- [ ] O(1) package location lookup table (?) 
- [ ] Channel management
- [ ] Upgrading via =guix pull= (?) 
- [ ] Moonshot: Flatpak integration
